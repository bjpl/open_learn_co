---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openlearn-backend
  labels:
    app: openlearn
    component: backend
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: openlearn
      component: backend
  template:
    metadata:
      labels:
        app: openlearn
        component: backend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: openlearn/backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP

        # Environment variables
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: openlearn-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: openlearn-secrets
              key: redis-url
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: openlearn-secrets
              key: elasticsearch-url
              optional: true
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: openlearn-secrets
              key: secret-key

        # Resource limits and requests
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2000m
            memory: 2Gi

        # Startup probe - gives application time to start
        # More lenient than readiness probe
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 12  # 60 seconds total startup time

        # Liveness probe - checks if container is alive
        # Restarts container if it fails
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3  # Restart after 30 seconds of failures

        # Readiness probe - checks if container can accept traffic
        # Removes from service if it fails
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2  # Remove from service after 10 seconds

        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

        # Volume mounts for temporary files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-cache
          mountPath: /app/.cache

      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-cache
        emptyDir:
          sizeLimit: 1Gi

      # Pod security and scheduling
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000

      # Anti-affinity to spread pods across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - openlearn
                - key: component
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname

      # Termination grace period
      terminationGracePeriodSeconds: 30

      # DNS policy
      dnsPolicy: ClusterFirst

      # Restart policy
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: openlearn-backend
  labels:
    app: openlearn
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: openlearn
    component: backend
  sessionAffinity: None

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: openlearn-backend
  labels:
    app: openlearn
    component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: openlearn-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: openlearn-backend
  labels:
    app: openlearn
    component: backend
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: openlearn
      component: backend
